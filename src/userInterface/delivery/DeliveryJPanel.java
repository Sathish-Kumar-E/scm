/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.delivery;

/**
 *
 * @author sathi
 */

import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;

import userInterface.Business;
import business.organization.procurement.*;
import business.organization.production.*;
import business.organization.onlineShoppingStore.InStockProducts;
import business.organization.onlineShoppingStore.CustomerOrderDirectory;
import business.organization.onlineShoppingStore.CustomerOrder;
import business.organization.onlineShoppingStore.CustomerProductPrice;
import business.organization.onlineShoppingStore.CustomerProductPriceDirectory;
import javax.swing.JOptionPane;
import userInterface.LoginJPanel;

public class DeliveryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryJPanel
     */
    
    private JPanel userProcessContainer;
    private Business business;
    private String username;
    private CustomerOrderDirectory customerOrderDirectory;
    
    public DeliveryJPanel(JPanel userProcessContainer, Business business, String username) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.username = username;
        this.business = business;
        this.customerOrderDirectory = this.business.getOnlineShoppingStoreOrganization().getCustomerOrderDirectory();
        populateAllOrderTable();
    }
    
    public void populateAllOrderTable() {
    DefaultTableModel model = (DefaultTableModel) tblCustomerOrderAllOrder.getModel();
    model.setRowCount(0); // Clear existing data
    for (CustomerOrder order : customerOrderDirectory.getCustomerOrderList()) {
        // Check if the order status is "Order Placed"
        if (order.getStatus().equals("Order Placed")) {
            int orderId = order.getId();
            String items = createItemsString(order.getItems()); // Implement this method to format items
            String status = order.getStatus();
            model.addRow(new Object[]{orderId, items, status});
        }
    }
}
    
    

private String createItemsString(HashMap<String, Integer> items) {
    StringBuilder sb = new StringBuilder();
    for (Map.Entry<String, Integer> item : items.entrySet()) {
        if (sb.length() > 0) {
            sb.append(", ");
        }
        sb.append(item.getKey()).append(" (").append(item.getValue()).append(")");
    }
    return sb.toString();
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCustomerOrderAllOrder = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ONLINE SHOPPING WEBSITE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 350, 40));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 100, -1));

        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("LOGOUT");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 110, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CUSTOMET DELIVERY ORDER");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 470, 40));

        tblCustomerOrderAllOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Items", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCustomerOrderAllOrder);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 470, 210));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("DELIVERY COMPLETED");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 370, 170, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.business.getOnlineShoppingStoreOrganization().setCustomerOrderDirectory(this.customerOrderDirectory);
        LoginJPanel panel = new LoginJPanel(userProcessContainer, this.business);
        userProcessContainer.add("LoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        this.business.getOnlineShoppingStoreOrganization().setCustomerOrderDirectory(this.customerOrderDirectory);
        LoginJPanel panel = new LoginJPanel(userProcessContainer, this.business);
        userProcessContainer.add("LoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         // Get the selected row index
    int selectedRow = tblCustomerOrderAllOrder.getSelectedRow();
    if (selectedRow >= 0) {
        // Get order ID from the table
        int orderId = (int) tblCustomerOrderAllOrder.getValueAt(selectedRow, 0);

        // Find the order and update its status
        for (CustomerOrder order : customerOrderDirectory.getCustomerOrderList()) {
            if (order.getId() == orderId) {
                order.setStatus("Delivery Completed");
                break;
            }
        }
        populateAllOrderTable();
        JOptionPane.showMessageDialog(null, "Delivery status updated to completed.");
    } else {
        JOptionPane.showMessageDialog(null, "Please select an order to complete.");
    }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCustomerOrderAllOrder;
    // End of variables declaration//GEN-END:variables
}
