/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.onlineShoppingStore;

/**
 *
 * @author sathi
 */

import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.CardLayout;

import userInterface.Business;
import business.organization.procurement.*;
import business.organization.production.*;
import business.organization.onlineShoppingStore.InStockProducts;
import javax.swing.JOptionPane;
import userInterface.LoginJPanel;

public class RetailerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RetailerJPanel
     */
    
    private JPanel userProcessContainer;
    private Business business;
    private String username;
    private InStockProducts inStockProducts;
    private ProductionOrderDirectory productionOrderDirectory;
    
    public RetailerJPanel(JPanel userProcessContainer, Business business, String username) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.username = username;
        this.business = business;
        this.inStockProducts = this.business.getOnlineShoppingStoreOrganization().getInStockProducts();
        this.productionOrderDirectory = this.business.getProductionOrganization().getProductionOrderDirectory();
        setupSpinners();
        setupProductionOrderStatusComboBox();
        populateInStockTable();
        
        comboBoxProductionOrderStatus.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedStatus = (String) comboBoxProductionOrderStatus.getSelectedItem();
                populateProductionOrderTable(selectedStatus);
            }
        });
        if (comboBoxProductionOrderStatus.getItemCount() > 0) {
            String initialStatus = (String) comboBoxProductionOrderStatus.getItemAt(0);
            populateProductionOrderTable(initialStatus);
        }
        
    }
    
    public void populateProductionOrderTable(String productionOrderStatus) {
        DefaultTableModel model = (DefaultTableModel) tblProductionOrder.getModel();
        model.setRowCount(0); // Clear existing rows
        for (ProductionOrder order : productionOrderDirectory.getProductionOrderList()) {
            if (order.getStatus().equals(productionOrderStatus)) {
                int id = order.getProductionOrderId();
                int itemsCount = calculateTotalItems(order.getProductionOrderProducts());
                String status = order.getStatus();
                Object[] row = new Object[]{id, itemsCount, status};
                model.addRow(row);
            }
        }
    }
    
    private int calculateTotalItems(HashMap<String, Integer> productionOrderProducts) {
        int total = 0;
        for (Integer count : productionOrderProducts.values()) {
            total += count;
        }
        return total;
    }
    
    private void setupProductionOrderStatusComboBox() {
        String[] statuses = {
            "Initiated", 
            "Production Approved", 
            "Production Rejected", 
            "Production Completed", 
            "Transportation Assigned", 
            "Delivery Picked", 
            "Delivery Completed"
        };
        comboBoxProductionOrderStatus.setModel(new DefaultComboBoxModel<>(statuses));
    }
    
    
    
    private void setupSpinners() {
        jSpinnerPotatoChipsCount.setModel(new SpinnerNumberModel(0, 0, null, 1));
        jSpinnerOrangeJuiceCount.setModel(new SpinnerNumberModel(0, 0, null, 1));
        jSpinnerMangoJuiceCount.setModel(new SpinnerNumberModel(0, 0, null, 1));
        jSpinnerWaterBottlesCount.setModel(new SpinnerNumberModel(0, 0, null, 1));
    }
    
    public void populateInStockTable() {
        DefaultTableModel model = (DefaultTableModel) tblInStockProducts.getModel();
        model.setRowCount(0);
        for (Map.Entry<String, Integer> entry : inStockProducts.getInStockProducts().entrySet()) {
            String productName = entry.getKey();
            int availableUnits = entry.getValue();
            model.addRow(new Object[]{productName, availableUnits});
        }  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInStockProducts = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerPotatoChipsCount = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinnerOrangeJuiceCount = new javax.swing.JSpinner();
        jSpinnerMangoJuiceCount = new javax.swing.JSpinner();
        jSpinnerWaterBottlesCount = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCreateProductionOrde = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProductionOrder = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        comboBoxProductionOrderStatus = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RETAILER");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 350, 30));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 100, -1));

        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("LOGOUT");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 110, -1));

        tblInStockProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Product Name", "Available Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInStockProducts);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 540, 160));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("IN STOCK PRODUCTS");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 540, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CREATE PRODUCTION ORDER");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 540, 40));

        jLabel4.setText("Orange Juice");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 140, 30));
        add(jSpinnerPotatoChipsCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 80, 30));

        jLabel5.setText("Potato Chips");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 130, 30));
        add(jSpinnerOrangeJuiceCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, 80, 30));
        add(jSpinnerMangoJuiceCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 80, 30));
        add(jSpinnerWaterBottlesCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 80, 30));

        jLabel6.setText("Water Bottles");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 160, 30));

        jLabel7.setText("Mango Juice");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 140, 30));

        btnCreateProductionOrde.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateProductionOrde.setText("CREATE PRODUCTION ORDER");
        btnCreateProductionOrde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProductionOrdeActionPerformed(evt);
            }
        });
        add(btnCreateProductionOrde, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 250, -1));

        tblProductionOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Items", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblProductionOrder);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 127, 470, 210));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("PRODUCTION ORDER");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 230, 20));

        comboBoxProductionOrderStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboBoxProductionOrderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(862, 90, 240, -1));
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnCreateProductionOrdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProductionOrdeActionPerformed
        // TODO add your handling code here:
        int potatoChipsCount = (Integer) jSpinnerPotatoChipsCount.getValue();
        int orangeJuiceCount = (Integer) jSpinnerOrangeJuiceCount.getValue();
        int mangoJuiceCount = (Integer) jSpinnerMangoJuiceCount.getValue();
        int waterBottlesCount = (Integer) jSpinnerWaterBottlesCount.getValue();
        HashMap<String, Integer> orderProducts = new HashMap<>();
        if (potatoChipsCount > 0) {
            orderProducts.put("Potato Chips", potatoChipsCount);
        }
        if (orangeJuiceCount > 0) {
            orderProducts.put("Orange Juice", orangeJuiceCount);
        }
        if (mangoJuiceCount > 0) {
            orderProducts.put("Mango Juice", mangoJuiceCount);
        }
        if (waterBottlesCount > 0) {
            orderProducts.put("Water Bottles", waterBottlesCount);
        }
        if (!orderProducts.isEmpty()) {
            int orderId = generateUniqueOrderId(); 
            ProductionOrder newOrder = new ProductionOrder(orderId, orderProducts, "Initiated");
            productionOrderDirectory.addNewProductionOrder(newOrder);
            JOptionPane.showMessageDialog(null, "Production order created successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "No products selected for the order.");
        }
    }//GEN-LAST:event_btnCreateProductionOrdeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.business.getOnlineShoppingStoreOrganization().setInStockProducts(this.inStockProducts);
        this.business.getProductionOrganization().setProductionOrderDirectory(this.productionOrderDirectory);
        LoginJPanel panel = new LoginJPanel(userProcessContainer, this.business);
        userProcessContainer.add("LoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        this.business.getOnlineShoppingStoreOrganization().setInStockProducts(this.inStockProducts);
        this.business.getProductionOrganization().setProductionOrderDirectory(this.productionOrderDirectory);
        LoginJPanel panel = new LoginJPanel(userProcessContainer, this.business);
        userProcessContainer.add("LoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnLogoutActionPerformed
    
    private int generateUniqueOrderId() {
        return productionOrderDirectory.getProductionOrderList().size() + 1;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateProductionOrde;
    private javax.swing.JButton btnLogout;
    private javax.swing.JComboBox<String> comboBoxProductionOrderStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinnerMangoJuiceCount;
    private javax.swing.JSpinner jSpinnerOrangeJuiceCount;
    private javax.swing.JSpinner jSpinnerPotatoChipsCount;
    private javax.swing.JSpinner jSpinnerWaterBottlesCount;
    private javax.swing.JTable tblInStockProducts;
    private javax.swing.JTable tblProductionOrder;
    // End of variables declaration//GEN-END:variables
}

